# *mangle
# :PREROUTING ACCEPT [0:0]
# :INPUT ACCEPT [0:0]
# :FORWARD ACCEPT [0:0]
# :OUTPUT ACCEPT [0:0]
# :POSTROUTING ACCEPT [0:0]
# # DHCP packets sent to VMs have no checksum (due to a longstanding bug).
# -A POSTROUTING -o virbr10 -p udp -m udp --dport 68 -j CHECKSUM --checksum-fill
# COMMIT

*nat
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# Do not masquerade to these reserved address blocks.
-A POSTROUTING -s 10.0.0.0/24 -d 224.0.0.0/24 -j RETURN
-A POSTROUTING -s 10.0.0.0/24 -d 255.255.255.255/32 -j RETURN

-A POSTROUTING -s 10.0.1.0/24 -d 224.0.0.0/24 -j RETURN
-A POSTROUTING -s 10.0.1.0/24 -d 255.255.255.255/32 -j RETURN

-A POSTROUTING -s 10.0.0.0/24 -d 10.0.1.0/24  -j RETURN
-A POSTROUTING -s 10.0.1.0/24 -d 10.0.0.0/24  -j RETURN

-A POSTROUTING -s {{ kubeinit_submariner_globalnet_cidr_range }} -d 10.0.1.0/24,10.0.0.0/24  -j RETURN
-A POSTROUTING -s 10.0.1.0/24,10.0.0.0/24 -d {{ kubeinit_submariner_globalnet_cidr_range }}  -j RETURN
-A POSTROUTING -s {{ kubeinit_submariner_globalnet_cidr_range }} -d 224.0.0.0/24 -j RETURN
-A POSTROUTING -s {{ kubeinit_submariner_globalnet_cidr_range }} -d 255.255.255.255/32 -j RETURN

# Masquerade all packets going from VMs to the LAN/Internet.
-A POSTROUTING -s 10.0.0.0/24 ! -d 10.0.0.0/24 -p tcp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 10.0.0.0/24 ! -d 10.0.0.0/24 -p udp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 10.0.0.0/24 ! -d 10.0.0.0/24 -j MASQUERADE

-A POSTROUTING -s 10.0.1.0/24 ! -d 10.0.1.0/24 -p tcp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 10.0.1.0/24 ! -d 10.0.1.0/24 -p udp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 10.0.1.0/24 ! -d 10.0.1.0/24 -j MASQUERADE
COMMIT

*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
# Allow basic INPUT traffic.
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT
# Accept SSH connections.
-A INPUT -p tcp -m tcp --syn -m conntrack --ctstate NEW --dport 22 -j ACCEPT
# Accept DNS (port 53) and DHCP (port 67) packets from VMs.
-A INPUT -i virbr10 -p udp -m udp -m multiport --dports 53,67 -j ACCEPT
-A INPUT -i virbr10 -p tcp -m tcp -m multiport --dports 53,67 -j ACCEPT
# Reject everything else.
-A INPUT -s 0.0.0.0/0 -d 0.0.0.0/0 -j ACCEPT
# -A INPUT -m conntrack --ctstate INVALID -j DROP
# -A INPUT -p tcp -m tcp -j REJECT --reject-with tcp-reset
# -A INPUT -j REJECT --reject-with icmp-port-unreachable

# Allow established traffic to the private subnet.

-A FORWARD -s 0.0.0.0/0 -d 10.0.0.0/24 -j ACCEPT -m state --state RELATED,ESTABLISHED
-A FORWARD -s 10.0.0.0/24 -d 0.0.0.0/0 -j ACCEPT -m state --state RELATED,ESTABLISHED

-A FORWARD -s 0.0.0.0/0 -d 10.0.1.0/24 -j ACCEPT -m state --state RELATED,ESTABLISHED
-A FORWARD -s 10.0.1.0/24 -d 0.0.0.0/0 -j ACCEPT -m state --state RELATED,ESTABLISHED

-A FORWARD -s 0.0.0.0/0 -d {{ kubeinit_submariner_globalnet_cidr_range }} -j ACCEPT -m state --state RELATED,ESTABLISHED
-A FORWARD -s {{ kubeinit_submariner_globalnet_cidr_range }} -d 0.0.0.0/0 -j ACCEPT -m state --state RELATED,ESTABLISHED

# Reject everything else.
# -A FORWARD -i virbr10 -j REJECT --reject-with icmp-port-unreachable
# -A FORWARD -o virbr10 -j REJECT --reject-with icmp-port-unreachable
COMMIT
